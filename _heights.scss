// You should not need the height attribute very often.
// Sizing things by the contents and their line-heights using flexbox is
// much better practice, as it is more responsive to component width change

// You may want _aspect-ratios.scss instead

/* Height Scale */

.h1 {
  height: $height-1;
}
.h2 {
  height: $height-2;
}
.h3 {
  height: $height-3;
}
.h4 {
  height: $height-4;
}
.h5 {
  height: $height-5;
}

/* Height Percentages - Based off of height of parent */

.h-25 {
  height: 25%;
}
.h-50 {
  height: 50%;
}
.h-75 {
  height: 75%;
}
.h-100 {
  height: 100%;
}

.min-h-100 {
  min-height: 100%;
}

/* Screen Height Percentage */

.vh-25 {
  height: 25vh;
}
.vh-50 {
  height: 50vh;
}
.vh-75 {
  height: 75vh;
}
.vh-100 {
  height: 100vh;
}

.min-vh-100 {
  min-height: 100vh;
}

/* String Properties */

.h-auto {
  height: auto;
}
.h-inherit {
  height: inherit;
}

@media #{$breakpoint-large} {
  .h1-l {
    height: $height-1;
  }
  .h2-l {
    height: $height-2;
  }
  .h3-l {
    height: $height-3;
  }
  .h4-l {
    height: $height-4;
  }
  .h5-l {
    height: $height-5;
  }
  .h-25-l {
    height: 25%;
  }
  .h-50-l {
    height: 50%;
  }
  .h-75-l {
    height: 75%;
  }
  .h-100-l {
    height: 100%;
  }
  .min-h-100-l {
    min-height: 100%;
  }
  .vh-25-l {
    height: 25vh;
  }
  .vh-50-l {
    height: 50vh;
  }
  .vh-75-l {
    height: 75vh;
  }
  .vh-100-l {
    height: 100vh;
  }
  .min-vh-100-l {
    min-height: 100vh;
  }
  .h-auto-l {
    height: auto;
  }
  .h-inherit-l {
    height: inherit;
  }
}
